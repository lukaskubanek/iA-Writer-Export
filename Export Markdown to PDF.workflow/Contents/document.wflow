<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>330</string>
	<key>AMApplicationVersion</key>
	<string>2.2.2</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.1</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	tell application "iA Writer"		if exists front document then			set pandoc to do shell script "PATH=$PATH:/usr/local/bin; echo $(which pandoc)"			set pdflatex to do shell script "PATH=$PATH:/usr/texbin:/usr/local/bin:; echo $(which pdflatex)"			if pandoc is equal to "" then				display alert "Pandoc has to be installed on your system for using this service. See http://johnmacfarlane.net/pandoc for more information."			else if pdflatex is equal to "" then				display alert "Could not find pdflatex. If you have pdflatex already installed, create a symlink in /usr/textbin/pdflatex. Otherwise you have to install pdflatex first."			else if (get file of front document) is missing value then				display alert "You have to save the document first before exporting to PDF."			else				set md_file to (quoted form of (POSIX path of (get file of front document)))								-- @todo check for special characters in the file name here								set pdf_file to (quoted form of (do shell script " echo " &amp; md_file &amp; " | sed 's/.md$/.pdf/'"))				do shell script pandoc &amp; " " &amp; md_file &amp; " -o " &amp; pdf_file &amp; " --latex-engine=" &amp; pdflatex				do shell script "open " &amp; pdf_file			end if		end if	end tellend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.1</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>13B57E7E-858A-4D8B-ADCD-07915A1D6350</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>E50647BC-975C-4FEF-AE7D-2317B4FFDEDC</string>
				<key>UUID</key>
				<string>A4F25DB4-0BD4-41D1-8967-5EE3FA5C99B8</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>461.000000:622.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
